
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftPRINTleftORleftANDleftNOTleftLTLEEQNEGTGEleftINleftADDSUBleftFLDIVleftMODleftMULDIVrightPOWleftLBLOCKRBLOCKleftLISTleftINDEXADD AND ASSIGN BOOL COMMA DIV ELSE EQ FLDIV GE GT ID IF IN LBLOCK LBRACE LE LPAREN LT MOD MUL NE NOT NUM OR POW PRINT RBLOCK RBRACE RPAREN SEMI STRING SUB WHILEblock : LBRACE inblock RBRACEblock : LBRACE RBRACEinblock : statement inblockinblock : statementstatement : print_smt\n                 | assign_smt\n                 | assign_to_list\n                 | if_smt\n                 | ifelse\n                 | while_smt\n                 | solo_blockprint_smt : PRINT LPAREN expression RPAREN SEMI %prec PRINTassign_smt : ID ASSIGN expression SEMI %prec ASSIGNassign_to_list : ID LBLOCK expression RBLOCK ASSIGN expression SEMI %prec ASSIGNwhile_smt : WHILE LPAREN expression RPAREN blockif_smt : IF LPAREN expression RPAREN blockifelse : if_smt ELSE blocksolo_block : blockexpression : expression IN expression %prec INexpression : STRING LBLOCK expression RBLOCK\n                  | expression LBLOCK expression RBLOCK %prec INDEXexpression : LPAREN expression RPARENexpression : LBLOCK expression term RBLOCKexpression : LBLOCK RBLOCK %prec LISTterm : COMMA expression termterm : empty %prec LISTempty : expression : STRING\n                  | NUM\n                  | BOOL\n                  | ID expression : expression LT expression\n                   | expression LE expression\n                   | expression EQ expression\n                   | expression NE expression\n                   | expression GT expression\n                   | expression GE expressionexpression : expression AND expression\n                  | expression OR expressionexpression : NOT expression %prec NOTexpression : expression ADD expression\n                  | expression SUB expressionexpression : expression MUL expressionexpression : expression DIV expression\n                  | expression MOD expression\n                  | expression FLDIV expressionexpression : expression POW expression'
    
_lr_action_items = {'LBRACE':([0,2,4,5,6,7,8,9,10,11,12,16,18,20,26,62,64,65,67,90,91,98,],[2,2,-2,2,-5,-6,-7,-8,-9,-10,-11,-18,-1,2,-17,-13,2,2,-12,-16,-15,-14,]),'$end':([1,4,18,],[0,-2,-1,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,16,18,19,26,62,67,90,91,98,],[4,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,-3,-17,-13,-12,-16,-15,-14,]),'PRINT':([2,4,5,6,7,8,9,10,11,12,16,18,26,62,67,90,91,98,],[13,-2,13,-5,-6,-7,-8,-9,-10,-11,-18,-1,-17,-13,-12,-16,-15,-14,]),'ID':([2,4,5,6,7,8,9,10,11,12,16,18,21,22,23,24,25,26,27,30,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,67,87,89,90,91,98,],[14,-2,14,-5,-6,-7,-8,-9,-10,-11,-18,-1,33,33,33,33,33,-17,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-13,-12,33,33,-16,-15,-14,]),'IF':([2,4,5,6,7,8,9,10,11,12,16,18,26,62,67,90,91,98,],[15,-2,15,-5,-6,-7,-8,-9,-10,-11,-18,-1,-17,-13,-12,-16,-15,-14,]),'WHILE':([2,4,5,6,7,8,9,10,11,12,16,18,26,62,67,90,91,98,],[17,-2,17,-5,-6,-7,-8,-9,-10,-11,-18,-1,-17,-13,-12,-16,-15,-14,]),'ELSE':([4,9,18,90,],[-2,20,-1,-16,]),'LPAREN':([13,15,17,21,22,23,24,25,27,30,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,87,89,],[21,24,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ASSIGN':([14,63,],[22,89,]),'LBLOCK':([14,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,92,93,94,95,96,],[23,30,30,30,30,30,30,42,58,30,-29,-30,-31,30,42,42,42,42,42,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,42,-24,42,-22,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,30,30,-21,-20,-23,42,42,]),'STRING':([21,22,23,24,25,27,30,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,87,89,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NUM':([21,22,23,24,25,27,30,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,87,89,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'BOOL':([21,22,23,24,25,27,30,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,87,89,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'NOT':([21,22,23,24,25,27,30,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,87,89,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'RPAREN':([28,29,31,32,33,37,38,39,60,61,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,93,94,],[40,-28,-29,-30,-31,64,65,66,-24,-40,-22,-19,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,-21,-20,-23,]),'IN':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[41,-28,-29,-30,-31,41,41,41,41,41,41,-24,41,-22,-19,41,41,41,41,41,41,41,41,41,-41,-42,-43,-44,-45,-46,-47,41,-21,-20,-23,41,41,]),'LT':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[43,-28,-29,-30,-31,43,43,43,43,43,43,-24,43,-22,-19,43,-32,-33,-34,-35,-36,-37,43,43,-41,-42,-43,-44,-45,-46,-47,43,-21,-20,-23,43,43,]),'LE':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[44,-28,-29,-30,-31,44,44,44,44,44,44,-24,44,-22,-19,44,-32,-33,-34,-35,-36,-37,44,44,-41,-42,-43,-44,-45,-46,-47,44,-21,-20,-23,44,44,]),'EQ':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[45,-28,-29,-30,-31,45,45,45,45,45,45,-24,45,-22,-19,45,-32,-33,-34,-35,-36,-37,45,45,-41,-42,-43,-44,-45,-46,-47,45,-21,-20,-23,45,45,]),'NE':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[46,-28,-29,-30,-31,46,46,46,46,46,46,-24,46,-22,-19,46,-32,-33,-34,-35,-36,-37,46,46,-41,-42,-43,-44,-45,-46,-47,46,-21,-20,-23,46,46,]),'GT':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[47,-28,-29,-30,-31,47,47,47,47,47,47,-24,47,-22,-19,47,-32,-33,-34,-35,-36,-37,47,47,-41,-42,-43,-44,-45,-46,-47,47,-21,-20,-23,47,47,]),'GE':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[48,-28,-29,-30,-31,48,48,48,48,48,48,-24,48,-22,-19,48,-32,-33,-34,-35,-36,-37,48,48,-41,-42,-43,-44,-45,-46,-47,48,-21,-20,-23,48,48,]),'AND':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[49,-28,-29,-30,-31,49,49,49,49,49,49,-24,-40,-22,-19,49,-32,-33,-34,-35,-36,-37,-38,49,-41,-42,-43,-44,-45,-46,-47,49,-21,-20,-23,49,49,]),'OR':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[50,-28,-29,-30,-31,50,50,50,50,50,50,-24,-40,-22,-19,50,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,50,-21,-20,-23,50,50,]),'ADD':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[51,-28,-29,-30,-31,51,51,51,51,51,51,-24,51,-22,51,51,51,51,51,51,51,51,51,51,-41,-42,-43,-44,-45,-46,-47,51,-21,-20,-23,51,51,]),'SUB':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[52,-28,-29,-30,-31,52,52,52,52,52,52,-24,52,-22,52,52,52,52,52,52,52,52,52,52,-41,-42,-43,-44,-45,-46,-47,52,-21,-20,-23,52,52,]),'MUL':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[53,-28,-29,-30,-31,53,53,53,53,53,53,-24,53,-22,53,53,53,53,53,53,53,53,53,53,53,53,-43,-44,53,53,-47,53,-21,-20,-23,53,53,]),'DIV':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[54,-28,-29,-30,-31,54,54,54,54,54,54,-24,54,-22,54,54,54,54,54,54,54,54,54,54,54,54,-43,-44,54,54,-47,54,-21,-20,-23,54,54,]),'MOD':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[55,-28,-29,-30,-31,55,55,55,55,55,55,-24,55,-22,55,55,55,55,55,55,55,55,55,55,55,55,-43,-44,-45,55,-47,55,-21,-20,-23,55,55,]),'FLDIV':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[56,-28,-29,-30,-31,56,56,56,56,56,56,-24,56,-22,56,56,56,56,56,56,56,56,56,56,56,56,-43,-44,-45,-46,-47,56,-21,-20,-23,56,56,]),'POW':([28,29,31,32,33,35,36,37,38,39,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,],[57,-28,-29,-30,-31,57,57,57,57,57,57,-24,57,-22,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-21,-20,-23,57,57,]),'SEMI':([29,31,32,33,35,40,60,61,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,93,94,96,],[-28,-29,-30,-31,62,67,-24,-40,-22,-19,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,-21,-20,-23,98,]),'RBLOCK':([29,30,31,32,33,36,59,60,61,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,94,95,97,],[-28,60,-29,-30,-31,63,-27,-24,-40,-22,-19,92,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,93,94,-26,-21,-20,-23,-27,-25,]),'COMMA':([29,31,32,33,59,60,61,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,93,94,95,],[-28,-29,-30,-31,87,-24,-40,-22,-19,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,-21,-20,-23,87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,2,5,20,64,65,],[1,16,16,26,90,91,]),'inblock':([2,5,],[3,19,]),'statement':([2,5,],[5,5,]),'print_smt':([2,5,],[6,6,]),'assign_smt':([2,5,],[7,7,]),'assign_to_list':([2,5,],[8,8,]),'if_smt':([2,5,],[9,9,]),'ifelse':([2,5,],[10,10,]),'while_smt':([2,5,],[11,11,]),'solo_block':([2,5,],[12,12,]),'expression':([21,22,23,24,25,27,30,34,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,87,89,],[28,35,36,37,38,39,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,95,96,]),'term':([59,95,],[86,97,]),'empty':([59,95,],[88,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> LBRACE inblock RBRACE','block',3,'p_block','stonyBrookScript.py',452),
  ('block -> LBRACE RBRACE','block',2,'p_emptyblock','stonyBrookScript.py',456),
  ('inblock -> statement inblock','inblock',2,'p_inblock','stonyBrookScript.py',462),
  ('inblock -> statement','inblock',1,'p_inblock2','stonyBrookScript.py',467),
  ('statement -> print_smt','statement',1,'p_smt','stonyBrookScript.py',471),
  ('statement -> assign_smt','statement',1,'p_smt','stonyBrookScript.py',472),
  ('statement -> assign_to_list','statement',1,'p_smt','stonyBrookScript.py',473),
  ('statement -> if_smt','statement',1,'p_smt','stonyBrookScript.py',474),
  ('statement -> ifelse','statement',1,'p_smt','stonyBrookScript.py',475),
  ('statement -> while_smt','statement',1,'p_smt','stonyBrookScript.py',476),
  ('statement -> solo_block','statement',1,'p_smt','stonyBrookScript.py',477),
  ('print_smt -> PRINT LPAREN expression RPAREN SEMI','print_smt',5,'p_statement_print','stonyBrookScript.py',481),
  ('assign_smt -> ID ASSIGN expression SEMI','assign_smt',4,'p_statement_assign','stonyBrookScript.py',485),
  ('assign_to_list -> ID LBLOCK expression RBLOCK ASSIGN expression SEMI','assign_to_list',7,'p_statement_assign_to_list','stonyBrookScript.py',489),
  ('while_smt -> WHILE LPAREN expression RPAREN block','while_smt',5,'p_statement_while','stonyBrookScript.py',493),
  ('if_smt -> IF LPAREN expression RPAREN block','if_smt',5,'p_statement_if','stonyBrookScript.py',497),
  ('ifelse -> if_smt ELSE block','ifelse',3,'p_statement_ifelse','stonyBrookScript.py',501),
  ('solo_block -> block','solo_block',1,'p_statement_solo_block','stonyBrookScript.py',505),
  ('expression -> expression IN expression','expression',3,'p_expression_inlist','stonyBrookScript.py',509),
  ('expression -> STRING LBLOCK expression RBLOCK','expression',4,'p_expression_index','stonyBrookScript.py',513),
  ('expression -> expression LBLOCK expression RBLOCK','expression',4,'p_expression_index','stonyBrookScript.py',514),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','stonyBrookScript.py',518),
  ('expression -> LBLOCK expression term RBLOCK','expression',4,'p_expression_list','stonyBrookScript.py',522),
  ('expression -> LBLOCK RBLOCK','expression',2,'p_expression_list2','stonyBrookScript.py',528),
  ('term -> COMMA expression term','term',3,'p_expression_term','stonyBrookScript.py',532),
  ('term -> empty','term',1,'p_expression_term2','stonyBrookScript.py',537),
  ('empty -> <empty>','empty',0,'p_empty','stonyBrookScript.py',541),
  ('expression -> STRING','expression',1,'p_expression_type','stonyBrookScript.py',545),
  ('expression -> NUM','expression',1,'p_expression_type','stonyBrookScript.py',546),
  ('expression -> BOOL','expression',1,'p_expression_type','stonyBrookScript.py',547),
  ('expression -> ID','expression',1,'p_expression_type','stonyBrookScript.py',548),
  ('expression -> expression LT expression','expression',3,'p_expression_compare','stonyBrookScript.py',552),
  ('expression -> expression LE expression','expression',3,'p_expression_compare','stonyBrookScript.py',553),
  ('expression -> expression EQ expression','expression',3,'p_expression_compare','stonyBrookScript.py',554),
  ('expression -> expression NE expression','expression',3,'p_expression_compare','stonyBrookScript.py',555),
  ('expression -> expression GT expression','expression',3,'p_expression_compare','stonyBrookScript.py',556),
  ('expression -> expression GE expression','expression',3,'p_expression_compare','stonyBrookScript.py',557),
  ('expression -> expression AND expression','expression',3,'p_expression_boolop','stonyBrookScript.py',561),
  ('expression -> expression OR expression','expression',3,'p_expression_boolop','stonyBrookScript.py',562),
  ('expression -> NOT expression','expression',2,'p_expression_not','stonyBrookScript.py',566),
  ('expression -> expression ADD expression','expression',3,'p_expression_AddSub','stonyBrookScript.py',570),
  ('expression -> expression SUB expression','expression',3,'p_expression_AddSub','stonyBrookScript.py',571),
  ('expression -> expression MUL expression','expression',3,'p_expression_mul','stonyBrookScript.py',578),
  ('expression -> expression DIV expression','expression',3,'p_expression_div','stonyBrookScript.py',582),
  ('expression -> expression MOD expression','expression',3,'p_expression_div','stonyBrookScript.py',583),
  ('expression -> expression FLDIV expression','expression',3,'p_expression_div','stonyBrookScript.py',584),
  ('expression -> expression POW expression','expression',3,'p_expression_pow','stonyBrookScript.py',588),
]
