Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> NUM
Rule 3     expression -> BOOL
Rule 4     expression -> STR
Rule 5     expression -> indexing
Rule 6     expression -> list
Rule 7     expression -> LPAREN expression RPAREN
Rule 8     list -> LBRACKET in_list RBRACKET
Rule 9     in_list -> expression
Rule 10    in_list -> expression COMMA in_list
Rule 11    indexing -> STR LBRACKET expression RBRACKET
Rule 12    indexing -> list LBRACKET expression RBRACKET
Rule 13    expression -> expression ADD expression
Rule 14    expression -> expression SUB expression
Rule 15    expression -> expression MUL expression
Rule 16    expression -> expression DIV expression
Rule 17    expression -> expression FLDIV expression
Rule 18    expression -> expression MOD expression
Rule 19    expression -> expression POW expression
Rule 20    expression -> expression LT expression
Rule 21    expression -> expression LE expression
Rule 22    expression -> expression EQ expression
Rule 23    expression -> expression NE expression
Rule 24    expression -> expression GT expression
Rule 25    expression -> expression GE expression
Rule 26    expression -> BOOL OR BOOL
Rule 27    expression -> BOOL AND BOOL
Rule 28    expression -> NOT BOOL
Rule 29    expression -> expression IN expression

Terminals, with rules where they appear

ADD                  : 13
AND                  : 27
BOOL                 : 3 26 26 27 27 28
COMMA                : 10
DIV                  : 16
EQ                   : 22
FLDIV                : 17
GE                   : 25
GT                   : 24
IN                   : 29
LBRACKET             : 8 11 12
LE                   : 21
LPAREN               : 7
LT                   : 20
MOD                  : 18
MUL                  : 15
NE                   : 23
NOT                  : 28
NUM                  : 2
OR                   : 26
POW                  : 19
RBRACKET             : 8 11 12
RPAREN               : 7
STR                  : 4 11
SUB                  : 14
error                : 

Nonterminals, with rules where they appear

expression           : 1 7 9 10 11 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 29 29
in_list              : 8 10
indexing             : 5
list                 : 6 12
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    statement                      shift and go to state 1
    expression                     shift and go to state 2
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    $end            reduce using rule 1 (statement -> expression .)
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    LT              shift and go to state 18
    LE              shift and go to state 19
    EQ              shift and go to state 20
    NE              shift and go to state 21
    GT              shift and go to state 22
    GE              shift and go to state 23
    IN              shift and go to state 24


state 3

    (2) expression -> NUM .

    ADD             reduce using rule 2 (expression -> NUM .)
    SUB             reduce using rule 2 (expression -> NUM .)
    MUL             reduce using rule 2 (expression -> NUM .)
    DIV             reduce using rule 2 (expression -> NUM .)
    FLDIV           reduce using rule 2 (expression -> NUM .)
    MOD             reduce using rule 2 (expression -> NUM .)
    POW             reduce using rule 2 (expression -> NUM .)
    LT              reduce using rule 2 (expression -> NUM .)
    LE              reduce using rule 2 (expression -> NUM .)
    EQ              reduce using rule 2 (expression -> NUM .)
    NE              reduce using rule 2 (expression -> NUM .)
    GT              reduce using rule 2 (expression -> NUM .)
    GE              reduce using rule 2 (expression -> NUM .)
    IN              reduce using rule 2 (expression -> NUM .)
    $end            reduce using rule 2 (expression -> NUM .)
    RPAREN          reduce using rule 2 (expression -> NUM .)
    COMMA           reduce using rule 2 (expression -> NUM .)
    RBRACKET        reduce using rule 2 (expression -> NUM .)


state 4

    (3) expression -> BOOL .
    (26) expression -> BOOL . OR BOOL
    (27) expression -> BOOL . AND BOOL

    ADD             reduce using rule 3 (expression -> BOOL .)
    SUB             reduce using rule 3 (expression -> BOOL .)
    MUL             reduce using rule 3 (expression -> BOOL .)
    DIV             reduce using rule 3 (expression -> BOOL .)
    FLDIV           reduce using rule 3 (expression -> BOOL .)
    MOD             reduce using rule 3 (expression -> BOOL .)
    POW             reduce using rule 3 (expression -> BOOL .)
    LT              reduce using rule 3 (expression -> BOOL .)
    LE              reduce using rule 3 (expression -> BOOL .)
    EQ              reduce using rule 3 (expression -> BOOL .)
    NE              reduce using rule 3 (expression -> BOOL .)
    GT              reduce using rule 3 (expression -> BOOL .)
    GE              reduce using rule 3 (expression -> BOOL .)
    IN              reduce using rule 3 (expression -> BOOL .)
    $end            reduce using rule 3 (expression -> BOOL .)
    RPAREN          reduce using rule 3 (expression -> BOOL .)
    COMMA           reduce using rule 3 (expression -> BOOL .)
    RBRACKET        reduce using rule 3 (expression -> BOOL .)
    OR              shift and go to state 25
    AND             shift and go to state 26


state 5

    (4) expression -> STR .
    (11) indexing -> STR . LBRACKET expression RBRACKET

    ADD             reduce using rule 4 (expression -> STR .)
    SUB             reduce using rule 4 (expression -> STR .)
    MUL             reduce using rule 4 (expression -> STR .)
    DIV             reduce using rule 4 (expression -> STR .)
    FLDIV           reduce using rule 4 (expression -> STR .)
    MOD             reduce using rule 4 (expression -> STR .)
    POW             reduce using rule 4 (expression -> STR .)
    LT              reduce using rule 4 (expression -> STR .)
    LE              reduce using rule 4 (expression -> STR .)
    EQ              reduce using rule 4 (expression -> STR .)
    NE              reduce using rule 4 (expression -> STR .)
    GT              reduce using rule 4 (expression -> STR .)
    GE              reduce using rule 4 (expression -> STR .)
    IN              reduce using rule 4 (expression -> STR .)
    $end            reduce using rule 4 (expression -> STR .)
    RPAREN          reduce using rule 4 (expression -> STR .)
    COMMA           reduce using rule 4 (expression -> STR .)
    RBRACKET        reduce using rule 4 (expression -> STR .)
    LBRACKET        shift and go to state 27


state 6

    (5) expression -> indexing .

    ADD             reduce using rule 5 (expression -> indexing .)
    SUB             reduce using rule 5 (expression -> indexing .)
    MUL             reduce using rule 5 (expression -> indexing .)
    DIV             reduce using rule 5 (expression -> indexing .)
    FLDIV           reduce using rule 5 (expression -> indexing .)
    MOD             reduce using rule 5 (expression -> indexing .)
    POW             reduce using rule 5 (expression -> indexing .)
    LT              reduce using rule 5 (expression -> indexing .)
    LE              reduce using rule 5 (expression -> indexing .)
    EQ              reduce using rule 5 (expression -> indexing .)
    NE              reduce using rule 5 (expression -> indexing .)
    GT              reduce using rule 5 (expression -> indexing .)
    GE              reduce using rule 5 (expression -> indexing .)
    IN              reduce using rule 5 (expression -> indexing .)
    $end            reduce using rule 5 (expression -> indexing .)
    RPAREN          reduce using rule 5 (expression -> indexing .)
    COMMA           reduce using rule 5 (expression -> indexing .)
    RBRACKET        reduce using rule 5 (expression -> indexing .)


state 7

    (6) expression -> list .
    (12) indexing -> list . LBRACKET expression RBRACKET

    ADD             reduce using rule 6 (expression -> list .)
    SUB             reduce using rule 6 (expression -> list .)
    MUL             reduce using rule 6 (expression -> list .)
    DIV             reduce using rule 6 (expression -> list .)
    FLDIV           reduce using rule 6 (expression -> list .)
    MOD             reduce using rule 6 (expression -> list .)
    POW             reduce using rule 6 (expression -> list .)
    LT              reduce using rule 6 (expression -> list .)
    LE              reduce using rule 6 (expression -> list .)
    EQ              reduce using rule 6 (expression -> list .)
    NE              reduce using rule 6 (expression -> list .)
    GT              reduce using rule 6 (expression -> list .)
    GE              reduce using rule 6 (expression -> list .)
    IN              reduce using rule 6 (expression -> list .)
    $end            reduce using rule 6 (expression -> list .)
    RPAREN          reduce using rule 6 (expression -> list .)
    COMMA           reduce using rule 6 (expression -> list .)
    RBRACKET        reduce using rule 6 (expression -> list .)
    LBRACKET        shift and go to state 28


state 8

    (7) expression -> LPAREN . expression RPAREN
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 29
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 9

    (28) expression -> NOT . BOOL

    BOOL            shift and go to state 30


state 10

    (8) list -> LBRACKET . in_list RBRACKET
    (9) in_list -> . expression
    (10) in_list -> . expression COMMA in_list
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    in_list                        shift and go to state 31
    expression                     shift and go to state 32
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 11

    (13) expression -> expression ADD . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 33
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 12

    (14) expression -> expression SUB . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 34
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 13

    (15) expression -> expression MUL . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 35
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 14

    (16) expression -> expression DIV . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 36
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 15

    (17) expression -> expression FLDIV . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 37
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 16

    (18) expression -> expression MOD . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 38
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 17

    (19) expression -> expression POW . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 39
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 18

    (20) expression -> expression LT . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 40
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 19

    (21) expression -> expression LE . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 41
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 20

    (22) expression -> expression EQ . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 42
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 21

    (23) expression -> expression NE . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 43
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 22

    (24) expression -> expression GT . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 44
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 23

    (25) expression -> expression GE . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 45
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 24

    (29) expression -> expression IN . expression
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 46
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 25

    (26) expression -> BOOL OR . BOOL

    BOOL            shift and go to state 47


state 26

    (27) expression -> BOOL AND . BOOL

    BOOL            shift and go to state 48


state 27

    (11) indexing -> STR LBRACKET . expression RBRACKET
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 49
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 28

    (12) indexing -> list LBRACKET . expression RBRACKET
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    list                           shift and go to state 7
    expression                     shift and go to state 50
    indexing                       shift and go to state 6

state 29

    (7) expression -> LPAREN expression . RPAREN
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    RPAREN          shift and go to state 51
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    LT              shift and go to state 18
    LE              shift and go to state 19
    EQ              shift and go to state 20
    NE              shift and go to state 21
    GT              shift and go to state 22
    GE              shift and go to state 23
    IN              shift and go to state 24


state 30

    (28) expression -> NOT BOOL .

    ADD             reduce using rule 28 (expression -> NOT BOOL .)
    SUB             reduce using rule 28 (expression -> NOT BOOL .)
    MUL             reduce using rule 28 (expression -> NOT BOOL .)
    DIV             reduce using rule 28 (expression -> NOT BOOL .)
    FLDIV           reduce using rule 28 (expression -> NOT BOOL .)
    MOD             reduce using rule 28 (expression -> NOT BOOL .)
    POW             reduce using rule 28 (expression -> NOT BOOL .)
    LT              reduce using rule 28 (expression -> NOT BOOL .)
    LE              reduce using rule 28 (expression -> NOT BOOL .)
    EQ              reduce using rule 28 (expression -> NOT BOOL .)
    NE              reduce using rule 28 (expression -> NOT BOOL .)
    GT              reduce using rule 28 (expression -> NOT BOOL .)
    GE              reduce using rule 28 (expression -> NOT BOOL .)
    IN              reduce using rule 28 (expression -> NOT BOOL .)
    $end            reduce using rule 28 (expression -> NOT BOOL .)
    RPAREN          reduce using rule 28 (expression -> NOT BOOL .)
    COMMA           reduce using rule 28 (expression -> NOT BOOL .)
    RBRACKET        reduce using rule 28 (expression -> NOT BOOL .)


state 31

    (8) list -> LBRACKET in_list . RBRACKET

    RBRACKET        shift and go to state 52


state 32

    (9) in_list -> expression .
    (10) in_list -> expression . COMMA in_list
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    RBRACKET        reduce using rule 9 (in_list -> expression .)
    COMMA           shift and go to state 53
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    LT              shift and go to state 18
    LE              shift and go to state 19
    EQ              shift and go to state 20
    NE              shift and go to state 21
    GT              shift and go to state 22
    GE              shift and go to state 23
    IN              shift and go to state 24


state 33

    (13) expression -> expression ADD expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    ADD             reduce using rule 13 (expression -> expression ADD expression .)
    SUB             reduce using rule 13 (expression -> expression ADD expression .)
    LT              reduce using rule 13 (expression -> expression ADD expression .)
    LE              reduce using rule 13 (expression -> expression ADD expression .)
    EQ              reduce using rule 13 (expression -> expression ADD expression .)
    NE              reduce using rule 13 (expression -> expression ADD expression .)
    GT              reduce using rule 13 (expression -> expression ADD expression .)
    GE              reduce using rule 13 (expression -> expression ADD expression .)
    IN              reduce using rule 13 (expression -> expression ADD expression .)
    $end            reduce using rule 13 (expression -> expression ADD expression .)
    RPAREN          reduce using rule 13 (expression -> expression ADD expression .)
    COMMA           reduce using rule 13 (expression -> expression ADD expression .)
    RBRACKET        reduce using rule 13 (expression -> expression ADD expression .)
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17

  ! MUL             [ reduce using rule 13 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 13 (expression -> expression ADD expression .) ]
  ! FLDIV           [ reduce using rule 13 (expression -> expression ADD expression .) ]
  ! MOD             [ reduce using rule 13 (expression -> expression ADD expression .) ]
  ! POW             [ reduce using rule 13 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 11 ]
  ! SUB             [ shift and go to state 12 ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]
  ! IN              [ shift and go to state 24 ]


state 34

    (14) expression -> expression SUB expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    ADD             reduce using rule 14 (expression -> expression SUB expression .)
    SUB             reduce using rule 14 (expression -> expression SUB expression .)
    LT              reduce using rule 14 (expression -> expression SUB expression .)
    LE              reduce using rule 14 (expression -> expression SUB expression .)
    EQ              reduce using rule 14 (expression -> expression SUB expression .)
    NE              reduce using rule 14 (expression -> expression SUB expression .)
    GT              reduce using rule 14 (expression -> expression SUB expression .)
    GE              reduce using rule 14 (expression -> expression SUB expression .)
    IN              reduce using rule 14 (expression -> expression SUB expression .)
    $end            reduce using rule 14 (expression -> expression SUB expression .)
    RPAREN          reduce using rule 14 (expression -> expression SUB expression .)
    COMMA           reduce using rule 14 (expression -> expression SUB expression .)
    RBRACKET        reduce using rule 14 (expression -> expression SUB expression .)
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17

  ! MUL             [ reduce using rule 14 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 14 (expression -> expression SUB expression .) ]
  ! FLDIV           [ reduce using rule 14 (expression -> expression SUB expression .) ]
  ! MOD             [ reduce using rule 14 (expression -> expression SUB expression .) ]
  ! POW             [ reduce using rule 14 (expression -> expression SUB expression .) ]
  ! ADD             [ shift and go to state 11 ]
  ! SUB             [ shift and go to state 12 ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]
  ! IN              [ shift and go to state 24 ]


state 35

    (15) expression -> expression MUL expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    ADD             reduce using rule 15 (expression -> expression MUL expression .)
    SUB             reduce using rule 15 (expression -> expression MUL expression .)
    MUL             reduce using rule 15 (expression -> expression MUL expression .)
    DIV             reduce using rule 15 (expression -> expression MUL expression .)
    FLDIV           reduce using rule 15 (expression -> expression MUL expression .)
    MOD             reduce using rule 15 (expression -> expression MUL expression .)
    LT              reduce using rule 15 (expression -> expression MUL expression .)
    LE              reduce using rule 15 (expression -> expression MUL expression .)
    EQ              reduce using rule 15 (expression -> expression MUL expression .)
    NE              reduce using rule 15 (expression -> expression MUL expression .)
    GT              reduce using rule 15 (expression -> expression MUL expression .)
    GE              reduce using rule 15 (expression -> expression MUL expression .)
    IN              reduce using rule 15 (expression -> expression MUL expression .)
    $end            reduce using rule 15 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 15 (expression -> expression MUL expression .)
    COMMA           reduce using rule 15 (expression -> expression MUL expression .)
    RBRACKET        reduce using rule 15 (expression -> expression MUL expression .)
    POW             shift and go to state 17

  ! POW             [ reduce using rule 15 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 11 ]
  ! SUB             [ shift and go to state 12 ]
  ! MUL             [ shift and go to state 13 ]
  ! DIV             [ shift and go to state 14 ]
  ! FLDIV           [ shift and go to state 15 ]
  ! MOD             [ shift and go to state 16 ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]
  ! IN              [ shift and go to state 24 ]


state 36

    (16) expression -> expression DIV expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    ADD             reduce using rule 16 (expression -> expression DIV expression .)
    SUB             reduce using rule 16 (expression -> expression DIV expression .)
    MUL             reduce using rule 16 (expression -> expression DIV expression .)
    DIV             reduce using rule 16 (expression -> expression DIV expression .)
    FLDIV           reduce using rule 16 (expression -> expression DIV expression .)
    MOD             reduce using rule 16 (expression -> expression DIV expression .)
    LT              reduce using rule 16 (expression -> expression DIV expression .)
    LE              reduce using rule 16 (expression -> expression DIV expression .)
    EQ              reduce using rule 16 (expression -> expression DIV expression .)
    NE              reduce using rule 16 (expression -> expression DIV expression .)
    GT              reduce using rule 16 (expression -> expression DIV expression .)
    GE              reduce using rule 16 (expression -> expression DIV expression .)
    IN              reduce using rule 16 (expression -> expression DIV expression .)
    $end            reduce using rule 16 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 16 (expression -> expression DIV expression .)
    COMMA           reduce using rule 16 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 16 (expression -> expression DIV expression .)
    POW             shift and go to state 17

  ! POW             [ reduce using rule 16 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 11 ]
  ! SUB             [ shift and go to state 12 ]
  ! MUL             [ shift and go to state 13 ]
  ! DIV             [ shift and go to state 14 ]
  ! FLDIV           [ shift and go to state 15 ]
  ! MOD             [ shift and go to state 16 ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]
  ! IN              [ shift and go to state 24 ]


state 37

    (17) expression -> expression FLDIV expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    ADD             reduce using rule 17 (expression -> expression FLDIV expression .)
    SUB             reduce using rule 17 (expression -> expression FLDIV expression .)
    FLDIV           reduce using rule 17 (expression -> expression FLDIV expression .)
    LT              reduce using rule 17 (expression -> expression FLDIV expression .)
    LE              reduce using rule 17 (expression -> expression FLDIV expression .)
    EQ              reduce using rule 17 (expression -> expression FLDIV expression .)
    NE              reduce using rule 17 (expression -> expression FLDIV expression .)
    GT              reduce using rule 17 (expression -> expression FLDIV expression .)
    GE              reduce using rule 17 (expression -> expression FLDIV expression .)
    IN              reduce using rule 17 (expression -> expression FLDIV expression .)
    $end            reduce using rule 17 (expression -> expression FLDIV expression .)
    RPAREN          reduce using rule 17 (expression -> expression FLDIV expression .)
    COMMA           reduce using rule 17 (expression -> expression FLDIV expression .)
    RBRACKET        reduce using rule 17 (expression -> expression FLDIV expression .)
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    MOD             shift and go to state 16
    POW             shift and go to state 17

  ! MUL             [ reduce using rule 17 (expression -> expression FLDIV expression .) ]
  ! DIV             [ reduce using rule 17 (expression -> expression FLDIV expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> expression FLDIV expression .) ]
  ! POW             [ reduce using rule 17 (expression -> expression FLDIV expression .) ]
  ! ADD             [ shift and go to state 11 ]
  ! SUB             [ shift and go to state 12 ]
  ! FLDIV           [ shift and go to state 15 ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]
  ! IN              [ shift and go to state 24 ]


state 38

    (18) expression -> expression MOD expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    ADD             reduce using rule 18 (expression -> expression MOD expression .)
    SUB             reduce using rule 18 (expression -> expression MOD expression .)
    FLDIV           reduce using rule 18 (expression -> expression MOD expression .)
    MOD             reduce using rule 18 (expression -> expression MOD expression .)
    LT              reduce using rule 18 (expression -> expression MOD expression .)
    LE              reduce using rule 18 (expression -> expression MOD expression .)
    EQ              reduce using rule 18 (expression -> expression MOD expression .)
    NE              reduce using rule 18 (expression -> expression MOD expression .)
    GT              reduce using rule 18 (expression -> expression MOD expression .)
    GE              reduce using rule 18 (expression -> expression MOD expression .)
    IN              reduce using rule 18 (expression -> expression MOD expression .)
    $end            reduce using rule 18 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 18 (expression -> expression MOD expression .)
    COMMA           reduce using rule 18 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 18 (expression -> expression MOD expression .)
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    POW             shift and go to state 17

  ! MUL             [ reduce using rule 18 (expression -> expression MOD expression .) ]
  ! DIV             [ reduce using rule 18 (expression -> expression MOD expression .) ]
  ! POW             [ reduce using rule 18 (expression -> expression MOD expression .) ]
  ! ADD             [ shift and go to state 11 ]
  ! SUB             [ shift and go to state 12 ]
  ! FLDIV           [ shift and go to state 15 ]
  ! MOD             [ shift and go to state 16 ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]
  ! IN              [ shift and go to state 24 ]


state 39

    (19) expression -> expression POW expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    ADD             reduce using rule 19 (expression -> expression POW expression .)
    SUB             reduce using rule 19 (expression -> expression POW expression .)
    MUL             reduce using rule 19 (expression -> expression POW expression .)
    DIV             reduce using rule 19 (expression -> expression POW expression .)
    FLDIV           reduce using rule 19 (expression -> expression POW expression .)
    MOD             reduce using rule 19 (expression -> expression POW expression .)
    LT              reduce using rule 19 (expression -> expression POW expression .)
    LE              reduce using rule 19 (expression -> expression POW expression .)
    EQ              reduce using rule 19 (expression -> expression POW expression .)
    NE              reduce using rule 19 (expression -> expression POW expression .)
    GT              reduce using rule 19 (expression -> expression POW expression .)
    GE              reduce using rule 19 (expression -> expression POW expression .)
    IN              reduce using rule 19 (expression -> expression POW expression .)
    $end            reduce using rule 19 (expression -> expression POW expression .)
    RPAREN          reduce using rule 19 (expression -> expression POW expression .)
    COMMA           reduce using rule 19 (expression -> expression POW expression .)
    RBRACKET        reduce using rule 19 (expression -> expression POW expression .)
    POW             shift and go to state 17

  ! POW             [ reduce using rule 19 (expression -> expression POW expression .) ]
  ! ADD             [ shift and go to state 11 ]
  ! SUB             [ shift and go to state 12 ]
  ! MUL             [ shift and go to state 13 ]
  ! DIV             [ shift and go to state 14 ]
  ! FLDIV           [ shift and go to state 15 ]
  ! MOD             [ shift and go to state 16 ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]
  ! IN              [ shift and go to state 24 ]


state 40

    (20) expression -> expression LT expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    LT              reduce using rule 20 (expression -> expression LT expression .)
    LE              reduce using rule 20 (expression -> expression LT expression .)
    EQ              reduce using rule 20 (expression -> expression LT expression .)
    NE              reduce using rule 20 (expression -> expression LT expression .)
    GT              reduce using rule 20 (expression -> expression LT expression .)
    GE              reduce using rule 20 (expression -> expression LT expression .)
    $end            reduce using rule 20 (expression -> expression LT expression .)
    RPAREN          reduce using rule 20 (expression -> expression LT expression .)
    COMMA           reduce using rule 20 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 20 (expression -> expression LT expression .)
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    IN              shift and go to state 24

  ! ADD             [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! SUB             [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! MUL             [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! FLDIV           [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! POW             [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! IN              [ reduce using rule 20 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]


state 41

    (21) expression -> expression LE expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    LT              reduce using rule 21 (expression -> expression LE expression .)
    LE              reduce using rule 21 (expression -> expression LE expression .)
    EQ              reduce using rule 21 (expression -> expression LE expression .)
    NE              reduce using rule 21 (expression -> expression LE expression .)
    GT              reduce using rule 21 (expression -> expression LE expression .)
    GE              reduce using rule 21 (expression -> expression LE expression .)
    $end            reduce using rule 21 (expression -> expression LE expression .)
    RPAREN          reduce using rule 21 (expression -> expression LE expression .)
    COMMA           reduce using rule 21 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 21 (expression -> expression LE expression .)
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    IN              shift and go to state 24

  ! ADD             [ reduce using rule 21 (expression -> expression LE expression .) ]
  ! SUB             [ reduce using rule 21 (expression -> expression LE expression .) ]
  ! MUL             [ reduce using rule 21 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 21 (expression -> expression LE expression .) ]
  ! FLDIV           [ reduce using rule 21 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 21 (expression -> expression LE expression .) ]
  ! POW             [ reduce using rule 21 (expression -> expression LE expression .) ]
  ! IN              [ reduce using rule 21 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]


state 42

    (22) expression -> expression EQ expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    LT              reduce using rule 22 (expression -> expression EQ expression .)
    LE              reduce using rule 22 (expression -> expression EQ expression .)
    EQ              reduce using rule 22 (expression -> expression EQ expression .)
    NE              reduce using rule 22 (expression -> expression EQ expression .)
    GT              reduce using rule 22 (expression -> expression EQ expression .)
    GE              reduce using rule 22 (expression -> expression EQ expression .)
    $end            reduce using rule 22 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 22 (expression -> expression EQ expression .)
    COMMA           reduce using rule 22 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 22 (expression -> expression EQ expression .)
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    IN              shift and go to state 24

  ! ADD             [ reduce using rule 22 (expression -> expression EQ expression .) ]
  ! SUB             [ reduce using rule 22 (expression -> expression EQ expression .) ]
  ! MUL             [ reduce using rule 22 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 22 (expression -> expression EQ expression .) ]
  ! FLDIV           [ reduce using rule 22 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 22 (expression -> expression EQ expression .) ]
  ! POW             [ reduce using rule 22 (expression -> expression EQ expression .) ]
  ! IN              [ reduce using rule 22 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]


state 43

    (23) expression -> expression NE expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    LT              reduce using rule 23 (expression -> expression NE expression .)
    LE              reduce using rule 23 (expression -> expression NE expression .)
    EQ              reduce using rule 23 (expression -> expression NE expression .)
    NE              reduce using rule 23 (expression -> expression NE expression .)
    GT              reduce using rule 23 (expression -> expression NE expression .)
    GE              reduce using rule 23 (expression -> expression NE expression .)
    $end            reduce using rule 23 (expression -> expression NE expression .)
    RPAREN          reduce using rule 23 (expression -> expression NE expression .)
    COMMA           reduce using rule 23 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 23 (expression -> expression NE expression .)
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    IN              shift and go to state 24

  ! ADD             [ reduce using rule 23 (expression -> expression NE expression .) ]
  ! SUB             [ reduce using rule 23 (expression -> expression NE expression .) ]
  ! MUL             [ reduce using rule 23 (expression -> expression NE expression .) ]
  ! DIV             [ reduce using rule 23 (expression -> expression NE expression .) ]
  ! FLDIV           [ reduce using rule 23 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 23 (expression -> expression NE expression .) ]
  ! POW             [ reduce using rule 23 (expression -> expression NE expression .) ]
  ! IN              [ reduce using rule 23 (expression -> expression NE expression .) ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]


state 44

    (24) expression -> expression GT expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    LT              reduce using rule 24 (expression -> expression GT expression .)
    LE              reduce using rule 24 (expression -> expression GT expression .)
    EQ              reduce using rule 24 (expression -> expression GT expression .)
    NE              reduce using rule 24 (expression -> expression GT expression .)
    GT              reduce using rule 24 (expression -> expression GT expression .)
    GE              reduce using rule 24 (expression -> expression GT expression .)
    $end            reduce using rule 24 (expression -> expression GT expression .)
    RPAREN          reduce using rule 24 (expression -> expression GT expression .)
    COMMA           reduce using rule 24 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 24 (expression -> expression GT expression .)
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    IN              shift and go to state 24

  ! ADD             [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! SUB             [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! MUL             [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! FLDIV           [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! POW             [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! IN              [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]


state 45

    (25) expression -> expression GE expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    LT              reduce using rule 25 (expression -> expression GE expression .)
    LE              reduce using rule 25 (expression -> expression GE expression .)
    EQ              reduce using rule 25 (expression -> expression GE expression .)
    NE              reduce using rule 25 (expression -> expression GE expression .)
    GT              reduce using rule 25 (expression -> expression GE expression .)
    GE              reduce using rule 25 (expression -> expression GE expression .)
    $end            reduce using rule 25 (expression -> expression GE expression .)
    RPAREN          reduce using rule 25 (expression -> expression GE expression .)
    COMMA           reduce using rule 25 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 25 (expression -> expression GE expression .)
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    IN              shift and go to state 24

  ! ADD             [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! SUB             [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! MUL             [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! FLDIV           [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! POW             [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! IN              [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]


state 46

    (29) expression -> expression IN expression .
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    LT              reduce using rule 29 (expression -> expression IN expression .)
    LE              reduce using rule 29 (expression -> expression IN expression .)
    EQ              reduce using rule 29 (expression -> expression IN expression .)
    NE              reduce using rule 29 (expression -> expression IN expression .)
    GT              reduce using rule 29 (expression -> expression IN expression .)
    GE              reduce using rule 29 (expression -> expression IN expression .)
    IN              reduce using rule 29 (expression -> expression IN expression .)
    $end            reduce using rule 29 (expression -> expression IN expression .)
    RPAREN          reduce using rule 29 (expression -> expression IN expression .)
    COMMA           reduce using rule 29 (expression -> expression IN expression .)
    RBRACKET        reduce using rule 29 (expression -> expression IN expression .)
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17

  ! ADD             [ reduce using rule 29 (expression -> expression IN expression .) ]
  ! SUB             [ reduce using rule 29 (expression -> expression IN expression .) ]
  ! MUL             [ reduce using rule 29 (expression -> expression IN expression .) ]
  ! DIV             [ reduce using rule 29 (expression -> expression IN expression .) ]
  ! FLDIV           [ reduce using rule 29 (expression -> expression IN expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression IN expression .) ]
  ! POW             [ reduce using rule 29 (expression -> expression IN expression .) ]
  ! LT              [ shift and go to state 18 ]
  ! LE              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 20 ]
  ! NE              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! GE              [ shift and go to state 23 ]
  ! IN              [ shift and go to state 24 ]


state 47

    (26) expression -> BOOL OR BOOL .

    ADD             reduce using rule 26 (expression -> BOOL OR BOOL .)
    SUB             reduce using rule 26 (expression -> BOOL OR BOOL .)
    MUL             reduce using rule 26 (expression -> BOOL OR BOOL .)
    DIV             reduce using rule 26 (expression -> BOOL OR BOOL .)
    FLDIV           reduce using rule 26 (expression -> BOOL OR BOOL .)
    MOD             reduce using rule 26 (expression -> BOOL OR BOOL .)
    POW             reduce using rule 26 (expression -> BOOL OR BOOL .)
    LT              reduce using rule 26 (expression -> BOOL OR BOOL .)
    LE              reduce using rule 26 (expression -> BOOL OR BOOL .)
    EQ              reduce using rule 26 (expression -> BOOL OR BOOL .)
    NE              reduce using rule 26 (expression -> BOOL OR BOOL .)
    GT              reduce using rule 26 (expression -> BOOL OR BOOL .)
    GE              reduce using rule 26 (expression -> BOOL OR BOOL .)
    IN              reduce using rule 26 (expression -> BOOL OR BOOL .)
    $end            reduce using rule 26 (expression -> BOOL OR BOOL .)
    RPAREN          reduce using rule 26 (expression -> BOOL OR BOOL .)
    COMMA           reduce using rule 26 (expression -> BOOL OR BOOL .)
    RBRACKET        reduce using rule 26 (expression -> BOOL OR BOOL .)


state 48

    (27) expression -> BOOL AND BOOL .

    ADD             reduce using rule 27 (expression -> BOOL AND BOOL .)
    SUB             reduce using rule 27 (expression -> BOOL AND BOOL .)
    MUL             reduce using rule 27 (expression -> BOOL AND BOOL .)
    DIV             reduce using rule 27 (expression -> BOOL AND BOOL .)
    FLDIV           reduce using rule 27 (expression -> BOOL AND BOOL .)
    MOD             reduce using rule 27 (expression -> BOOL AND BOOL .)
    POW             reduce using rule 27 (expression -> BOOL AND BOOL .)
    LT              reduce using rule 27 (expression -> BOOL AND BOOL .)
    LE              reduce using rule 27 (expression -> BOOL AND BOOL .)
    EQ              reduce using rule 27 (expression -> BOOL AND BOOL .)
    NE              reduce using rule 27 (expression -> BOOL AND BOOL .)
    GT              reduce using rule 27 (expression -> BOOL AND BOOL .)
    GE              reduce using rule 27 (expression -> BOOL AND BOOL .)
    IN              reduce using rule 27 (expression -> BOOL AND BOOL .)
    $end            reduce using rule 27 (expression -> BOOL AND BOOL .)
    RPAREN          reduce using rule 27 (expression -> BOOL AND BOOL .)
    COMMA           reduce using rule 27 (expression -> BOOL AND BOOL .)
    RBRACKET        reduce using rule 27 (expression -> BOOL AND BOOL .)


state 49

    (11) indexing -> STR LBRACKET expression . RBRACKET
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    RBRACKET        shift and go to state 54
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    LT              shift and go to state 18
    LE              shift and go to state 19
    EQ              shift and go to state 20
    NE              shift and go to state 21
    GT              shift and go to state 22
    GE              shift and go to state 23
    IN              shift and go to state 24


state 50

    (12) indexing -> list LBRACKET expression . RBRACKET
    (13) expression -> expression . ADD expression
    (14) expression -> expression . SUB expression
    (15) expression -> expression . MUL expression
    (16) expression -> expression . DIV expression
    (17) expression -> expression . FLDIV expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . POW expression
    (20) expression -> expression . LT expression
    (21) expression -> expression . LE expression
    (22) expression -> expression . EQ expression
    (23) expression -> expression . NE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (29) expression -> expression . IN expression

    RBRACKET        shift and go to state 55
    ADD             shift and go to state 11
    SUB             shift and go to state 12
    MUL             shift and go to state 13
    DIV             shift and go to state 14
    FLDIV           shift and go to state 15
    MOD             shift and go to state 16
    POW             shift and go to state 17
    LT              shift and go to state 18
    LE              shift and go to state 19
    EQ              shift and go to state 20
    NE              shift and go to state 21
    GT              shift and go to state 22
    GE              shift and go to state 23
    IN              shift and go to state 24


state 51

    (7) expression -> LPAREN expression RPAREN .

    ADD             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    SUB             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    FLDIV           reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    POW             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 7 (expression -> LPAREN expression RPAREN .)


state 52

    (8) list -> LBRACKET in_list RBRACKET .

    LBRACKET        reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    ADD             reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    SUB             reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    MUL             reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    DIV             reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    FLDIV           reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    MOD             reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    POW             reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    LT              reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    LE              reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    EQ              reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    NE              reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    GT              reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    GE              reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    IN              reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    $end            reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    RPAREN          reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    COMMA           reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)
    RBRACKET        reduce using rule 8 (list -> LBRACKET in_list RBRACKET .)


state 53

    (10) in_list -> expression COMMA . in_list
    (9) in_list -> . expression
    (10) in_list -> . expression COMMA in_list
    (2) expression -> . NUM
    (3) expression -> . BOOL
    (4) expression -> . STR
    (5) expression -> . indexing
    (6) expression -> . list
    (7) expression -> . LPAREN expression RPAREN
    (13) expression -> . expression ADD expression
    (14) expression -> . expression SUB expression
    (15) expression -> . expression MUL expression
    (16) expression -> . expression DIV expression
    (17) expression -> . expression FLDIV expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression POW expression
    (20) expression -> . expression LT expression
    (21) expression -> . expression LE expression
    (22) expression -> . expression EQ expression
    (23) expression -> . expression NE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . BOOL OR BOOL
    (27) expression -> . BOOL AND BOOL
    (28) expression -> . NOT BOOL
    (29) expression -> . expression IN expression
    (11) indexing -> . STR LBRACKET expression RBRACKET
    (12) indexing -> . list LBRACKET expression RBRACKET
    (8) list -> . LBRACKET in_list RBRACKET

    NUM             shift and go to state 3
    BOOL            shift and go to state 4
    STR             shift and go to state 5
    LPAREN          shift and go to state 8
    NOT             shift and go to state 9
    LBRACKET        shift and go to state 10

    expression                     shift and go to state 32
    in_list                        shift and go to state 56
    indexing                       shift and go to state 6
    list                           shift and go to state 7

state 54

    (11) indexing -> STR LBRACKET expression RBRACKET .

    ADD             reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    SUB             reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    MUL             reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    DIV             reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    FLDIV           reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    MOD             reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    POW             reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    LT              reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    LE              reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    EQ              reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    NE              reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    GT              reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    GE              reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    IN              reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    $end            reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 11 (indexing -> STR LBRACKET expression RBRACKET .)


state 55

    (12) indexing -> list LBRACKET expression RBRACKET .

    ADD             reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    SUB             reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    MUL             reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    DIV             reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    FLDIV           reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    MOD             reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    POW             reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    LT              reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    LE              reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    EQ              reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    NE              reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    GT              reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    GE              reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    IN              reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    $end            reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 12 (indexing -> list LBRACKET expression RBRACKET .)


state 56

    (10) in_list -> expression COMMA in_list .

    RBRACKET        reduce using rule 10 (in_list -> expression COMMA in_list .)

